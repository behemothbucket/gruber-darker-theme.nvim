local M = {}
local palette = require("palette")
local main, text, diff, diagnostic, git, telescope = table.unpack(palette)

local highlight_colors = {
  --Main
  Normal                      = { bg = main.gruber_darker_bg, fg = main.gruber_darker_fg },
  Bold                        = { em = 'bold' },
  Italic                      = { em = 'italic' },
  Underlined                  = { em = 'underline' },
  Visual                      = { bg = main.gruber_darker_bg_p3, fg = main.gruber_darker_fg },
  Directory                   = { fg = main.gruber_darker_quartz, bold = true },
  IncSearch                   = { fg = main.gruber_darker_fg_1, bg = main.gruber_darker_niagara_m1 },
  Search                      = { link = "IncSearch" },
  Substitute                  = { link = "IncSearch" },
  MatchParen                  = { fg = "", bg = main.gruber_darker_bg_p4 },
  ModeMsg                     = { link = "Normal" },
  MoreMsg                     = { link = "Normal" },
  WarningMsg                  = { fg = main.gruber_darker_yellow },
  FloatBorder                 = { fg = main.gruber_darker_grey_custom, bg = "" },
  NonText                     = { link = "Normal" },
  LineNr                      = { bg = main.gruber_darker_bg, fg = main.gruber_darker_grey_custom },
  LineNrAbove                 = { link = "LineNr" },
  LineNrBelow                 = { link = "LineNr" },
  CursorLineNr                = { fg = main.gruber_darker_yellow, bg = main.gruber_darker_bg },
  StatusLine                  = { fg = main.gruber_darker_quartz, bg = main.gruber_darker_bg_p1 },
  StatusLineNC                = { link = "StatusLine" },
  WinSeparator                = { fg = main.gruber_darker_grey_custom, bg = "" },
  SignColumn                  = { bg = main.gruber_darker_bg },
  Colorcolumn                 = { link = "StatusLine" },
  TabLineFill                 = { fg = "", bg = "" },
  TabLine                     = { fg = "", bg = "" },
  TabLineSel                  = { fg = "", bg = "" },
  Pmenu                       = { link = "Normal" },
  PmenuSel                    = { bg = main.gruber_darker_niagara_m2 },
  PmenuThumb                  = { bg = main.gruber_darker_bg_p3 },
  PmenuSbar                   = { link = "PmenuThumb" },
  Conceal                     = { link = "Operator" },
  Title                       = { link = "Normal" },
  Question                    = { link = "Normal" },
  WildMenu                    = { link = "Pmenu" },
  Folded                      = { fg = main.gruber_darker_grey_custom },
  FoldColumn                  = { link = "Folded" },
  Error                       = { fg = main.gruber_darker_red },
  ErrorMsg                    = { link = "Error" },
  -- Spelling
  SpellBad                    = { em = 'underline' },
  SpellLocal                  = { em = 'underline' },
  SpellCap                    = { em = 'underline' },
  SpellRare                   = { em = 'underline' },
  -- Syntax
  Boolean                     = { link = "String" },
  Character                   = { link = "Normal" },
  Comment                     = { fg = main.gruber_darker_grey_custom, italic = true },
  Conditional                 = { link = "Keyword" },
  Constant                    = { link = "Type" },
  Define                      = { link = "Keyword" },
  Delimiter                   = { link = "Special" },
  Float                       = { link = "Number" },
  Function                    = { fg = main.gruber_darker_niagara },
  Identifier                  = { fg = main.gruber_darker_fg_1 },
  Include                     = { link = "PreProc" },
  Keyword                     = { main.gruber_darker_yellow, bold = true },
  Label                       = { link = "String" },
  Number                      = { link = "Identifier" },
  Operator                    = { link = "Variable" },
  PreProc                     = { fg = main.gruber_darker_quartz },
  Repeat                      = { link = "Keyword" },
  Special                     = { link = "Keyword" },
  SpecialChar                 = { link = "String" },
  SpecialComment              = { link = "SpecialChar" },
  SpecialKey                  = { fg = main.gruber_darker_grey_custom, bg = main.gruber_darker_bg },
  Statement                   = { link = "Type" },
  StorageClass                = { link = "Keyword" },
  String                      = { fg = main.gruber_darker_green },
  Structure                   = { link = "Type" },
  Tag                         = { link = "SpecialChar" },
  Todo                        = { fg = text.todo_fg, bg = text.todo_bg },
  Type                        = { fg = main.gruber_darker_quartz },
  Typedef                     = { link = "Type" },
  -- TreeSitter
  TSAnnotation                = { fg = main.gruber_darker_grey_fg, italic = true },
  TSAttribute                 = { fg = main.gruber_darker_grey_fg },
  TSBoolean                   = { link = "Boolean" },
  TSCharacter                 = { link = "Character" },
  TSCharacterSpecial          = { link = "SpecialChar" },
  TSComment                   = { link = "Comment" },
  TSConditional               = { link = "Conditional" },
  TSConstant                  = { link = "Constant" },
  TSConstBuiltin              = { link = "Special" },
  TSConstMacro                = { link = "Define" },
  TSConstructor               = { link = "Function" },
  TSDebug                     = { link = "Special" },
  TSDefine                    = { link = "Define" },
  TSError                     = { link = "Error" },
  TSException                 = { link = "Exception" },
  TSField                     = { link = "Identifier" },
  TSFloat                     = { link = "Identifier" },
  TSFunction                  = { link = "Function" },
  TSFuncBuiltin               = { link = "Keyword" },
  TSFuncMacro                 = { link = "PreProc" },
  TSInclude                   = { link = "Include" },
  TSKeyword                   = { link = "Keyword" },
  TSKeywordFunction           = { link = "Function" },
  TSKeywordOperator           = { link = "Function" },
  TSKeywordReturn             = { link = "Special" },
  TSLabel                     = { link = "Label" },
  TSMethod                    = { link = "Identifier" },
  TSNamespace                 = { fg = main.gruber_darker_grey_custom },
  TSNone                      = { link = "Normal" },
  TSNumber                    = { link = "Number" },
  TSOperator                  = { link = "Operator" },
  TSParameter                 = { link = "Identifier" },
  TSParameterReference        = { fg = main.gruber_darker_grey_custom },
  TSPreProc                   = { link = "PreProc" },
  TSProperty                  = { link = "Identifier" },
  TSPunctDelimiter            = { fg = main.gruber_darker_grey_custom },
  TSPunctBracket              = { fg = main.gruber_darker_grey_custom },
  TSPunctSpecial              = { fg = main.gruber_darker_grey_custom },
  TSRepeat                    = { link = "Keyword" },
  TSStorageClass              = { link = "Keyword" },
  TSString                    = { link = "String" },
  TSStringRegex               = { link = "Comment" },
  TSStringEscape              = { link = "Comment" },
  TSStringSpecial             = { link = "Comment" },
  TSSymbol                    = { link = "Identifier" },
  TSTag                       = { link = "Tag" },
  TSTagAttribute              = { fg = main.gruber_darker_grey_custom },
  TSTagDelimiter              = { fg = main.gruber_darker_grey_custom },
  TSText                      = { link = "Normal" },
  TSStrong                    = { em = 'bold' },
  TSEmphasis                  = { em = 'italic' },
  TSUnderline                 = { em = 'underline' },
  TSStrike                    = { em = 'strikethrough' },
  TSTitle                     = { link = "Title" },
  TSLiteral                   = { link = "Variable" },
  TSMath                      = { fg = main.gruber_darker_quartz },
  TSTextReference             = { fg = main.gruber_darker_quartz },
  TSEnvironment               = { fg = main.gruber_darker_quartz },
  TSEnvironmentName           = { fg = main.gruber_darker_quartz },
  ["@text.todo"]              = { fg = "#4BA8FF", bg = "#0b1e33" },
  ["@text.note"]              = { fg = "#FF57FF", bg = "#1b0e23" },
  ["@text.warning"]           = { fg = "#FF9900", bg = "#392a13" },
  ["@text.danger"]            = { fg = "#FF8B64", bg = "#391a13" },
  ["@text.uri"]               = { fg = main.gruber_darker_niagara, underline = true },
  ["@unchecked_list_item"]    = { link = "Normal" },
  ["@checked_list_item"]      = { fg = main.gruber_darker_grey_custom, strikethrough = true },
  ["@text.todo.unchecked"]    = { link = "@unchecked_list_item" },
  ["@text.todo.checked"]      = { link = "@checked_list_item" },
  TSTodo                      = { link = "@text.todo" },
  TSNote                      = { link = "@text.note" },
  TSWarning                   = { link = "@text.warn" },
  TSDanger                    = { link = "@text.danger" },
  TSURI                       = { fg = main.gruber_darker_quartz, underline = true },
  TSType                      = { link = "Type" },
  TSTypeBuiltin               = { link = "Keyword" },
  TSTypeQualifier             = { fg = main.gruber_darker_grey_custom, italic = true },
  TSTypeDefinition            = { link = "Typedef" },
  TSVariable                  = { link = "Variable" },
  TSVariableBuiltin           = { link = "Keyword" },
  ["@keyword"]                = { link = "Keyword" },
  ["@function"]               = { link = "Function" },
  ["@method"]                 = { link = "Function" },
  ["@field"]                  = { link = "Identifier" },
  ["@constructor"]            = { link = "Function" },
  ["@repeat"]                 = { link = "Repeat" },
  ["@label"]                  = { link = "String" },
  ["@variable"]               = { link = "Variable" },
  ["@type"]                   = { link = "Type" },
  ["@type.builtin"]           = { link = "Keyword" },
  ["@constant"]               = { link = "Type" },
  ["@variable.builtin"]       = { link = "Type" },
  ["@operator"]               = { link = "Variable" },
  ["@punctuation.special"]    = { link = "SpecialChar" },
  ["@punctuation.bracket"]    = { link = "Normal" },
  ["@conditional"]            = { link = "Conditional" },
  ["@exception"]              = { link = "Exception" },
  -- Diff
  DiffAdd                     = { fg = diff.add_fg, bg = diff.add_bg },
  DiffAdded                   = { fg = diff.added_fg, bg = diff.added_bg },
  DiffDelete                  = { fg = diff.delete_fg, bg = diff.delete_bg },
  DiffRemoved                 = { fg = diff.removed_fg, diff.removed_bg },
  DiffChange                  = { fg = diff.change_fg, bg = diff.change_bg },
  DiffText                    = { fg = diff.text_fg, bg = diff.text_bg, em = "bold" },
  DiffLine                    = { fg = diff.line_fg },
  -- Telescope
  TelescopeSelection          = { bg = telescope.selection_bg },
  TelescopeSelectionSelection = { link = "TelescopeSelection" },
  TelescopeMatching           = { fg = telescope.matching_fg, bold = true },
  --TODO Languages
  -- vim.api.nvim_set_hl(0, "@css.property_name", { fg = Gray_color })
  -- vim.api.nvim_set_hl(0, "@c.primitive_type", { link = "@type" })
  -- vim.api.nvim_set_hl(0, "@c.function_identifier", { link = "@variable" })

  --Scheme icon
  DevIconScheme               = { fg = main.gruber_darker_red },
  --Oil
  OilDir                      = { link = "Directory" },
  --Mason
  MasonHeader                 = { link = "StatusLine" },
}

function M.setup()
  local hi = vim.api.nvim_set_hl

  for name, style in pairs(highlight_colors) do hi(0, name, style) end
end

return M
